package testrismenu;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.FileInputStream;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JFrame;
import javax.swing.JRootPane;
import javax.swing.KeyStroke;
import javax.swing.Timer;
import testrismenu.ButtonControls;

/**
 *
 * @author Admin
 */
public class WindowFrame extends JFrame {

    /**
     * Creates new form WindowFrame
     */
    private ArrayList<Integer> listKeyCode;
    private ButtonControls btnC;
//    private ButtonControls btnC;
    private GameArea game;
    private GameThread gameThread;
    private InputHandler input;
    private InputMap im;
    private ActionMap am;
    public WindowFrame() throws Exception {
        initComponents();
        this.getContentPane().setBackground(Color.BLACK);
        ReadyPanel.setBackground(new Color(35, 35, 35));
        this.add(SettingsPanel,0);
        this.add(ReadyPanel,1);
        initControls();
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        
    }
    private void initControls() throws Exception{
            
        im = this.getRootPane().getInputMap();
        am = this.getRootPane().getActionMap();
        listKeyCode = getList("CurrentInput.bi");
        game = new GameArea(GameFrame);
        this.add(game,2);
        startGame();
        input = new InputHandler(game, gameThread, listKeyCode, im, am);
        input.disableInput(listKeyCode);
        btnC = new ButtonControls(buttonControl, input);
        gameThread.addInputHandler(input);
        gameThread.addListKeyCode(listKeyCode);
        game.addGameThread(gameThread);
        am.put("Reset",new AbstractAction(){
            @Override
            public void actionPerformed(ActionEvent e){
                try {
                    listKeyCode = getList("CurrentInput.bi");
                } catch (Exception ex) {
                    System.out.println("Can't retrieve input settings from file.");
                } 
                gameThread.stopTimer();
                gameThread.stopRunning();
                game.reset();
                input.disableInput(listKeyCode);
                startGame();
                gameThread.addInputHandler(input);
                gameThread.addListKeyCode(listKeyCode);
                input.replaceGameThread(gameThread);
                game.addGameThread(gameThread);
            }
        });
        
    }
    private ArrayList<Integer> getList(String s) throws Exception{
        
        ObjectInputStream ois = new ObjectInputStream(new FileInputStream(s));
        ArrayList<Integer> res = (ArrayList<Integer>) ois.readObject();
        ois.close();
        return res;
        
    }
    
    private void startGame(){
        ReadyPanel.setVisible(false);
        gameThread = new GameThread(game, ReadyPanel, ReadyLabel, TimerLabel, ScoreLabel, LevelLabel, SettingsPanel);
        gameThread.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        GameFrame = new javax.swing.JPanel();
        ReadyPanel = new javax.swing.JPanel();
        ReadyLabel = new javax.swing.JLabel();
        SettingsPanel = new javax.swing.JPanel();
        TimerLabel = new javax.swing.JLabel();
        buttonControl = new javax.swing.JButton();
        buttonNewGame = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        ScoreLabel = new javax.swing.JLabel();
        LevelLabel = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(0, 0, 0));
        setName("Tetris by Nevir2002"); // NOI18N
        setSize(new java.awt.Dimension(500, 780));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        GameFrame.setBackground(new java.awt.Color(0, 0, 0));
        GameFrame.setPreferredSize(new java.awt.Dimension(660, 660));

        ReadyPanel.setBackground(new java.awt.Color(50, 50, 50));
        ReadyPanel.setPreferredSize(new java.awt.Dimension(300, 100));

        ReadyLabel.setBackground(new java.awt.Color(200, 200, 200));
        ReadyLabel.setFont(new java.awt.Font("Arial", 1, 56)); // NOI18N
        ReadyLabel.setForeground(new java.awt.Color(204, 204, 0));
        ReadyLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ReadyLabel.setText("READY");

        javax.swing.GroupLayout ReadyPanelLayout = new javax.swing.GroupLayout(ReadyPanel);
        ReadyPanel.setLayout(ReadyPanelLayout);
        ReadyPanelLayout.setHorizontalGroup(
            ReadyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ReadyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
        ReadyPanelLayout.setVerticalGroup(
            ReadyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ReadyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout GameFrameLayout = new javax.swing.GroupLayout(GameFrame);
        GameFrame.setLayout(GameFrameLayout);
        GameFrameLayout.setHorizontalGroup(
            GameFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GameFrameLayout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(ReadyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(180, Short.MAX_VALUE))
        );
        GameFrameLayout.setVerticalGroup(
            GameFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GameFrameLayout.createSequentialGroup()
                .addGap(300, 300, 300)
                .addComponent(ReadyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(260, Short.MAX_VALUE))
        );

        SettingsPanel.setBackground(new java.awt.Color(0, 0, 0));

        TimerLabel.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        TimerLabel.setForeground(new java.awt.Color(200, 200, 200));
        TimerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TimerLabel.setText("Thời gian: 00:00:00");

        buttonControl.setBackground(new java.awt.Color(161, 161, 161));
        buttonControl.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        buttonControl.setText("Cài đặt");
        buttonControl.setBorder(null);
        buttonControl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonControl.setFocusable(false);
        buttonControl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonControl.setMargin(new java.awt.Insets(0, 0, 0, 0));
        buttonControl.setOpaque(true);
        buttonControl.setRequestFocusEnabled(false);
        buttonControl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonControlActionPerformed(evt);
            }
        });

        buttonNewGame.setBackground(new java.awt.Color(161, 161, 161));
        buttonNewGame.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        buttonNewGame.setText("Ván mới");
        buttonNewGame.setBorder(null);
        buttonNewGame.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonNewGame.setFocusable(false);
        buttonNewGame.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonNewGame.setMargin(new java.awt.Insets(0, 0, 0, 0));
        buttonNewGame.setOpaque(true);
        buttonNewGame.setRequestFocusEnabled(false);
        buttonNewGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNewGameActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(161, 161, 161));
        jButton1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButton1.setText("Thoát game");
        jButton1.setBorder(null);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton1.setOpaque(true);
        jButton1.setRequestFocusEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        ScoreLabel.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        ScoreLabel.setForeground(new java.awt.Color(200, 200, 200));
        ScoreLabel.setText("Điểm: 0");

        LevelLabel.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        LevelLabel.setForeground(new java.awt.Color(200, 200, 200));
        LevelLabel.setText("Cấp độ: 1");

        javax.swing.GroupLayout SettingsPanelLayout = new javax.swing.GroupLayout(SettingsPanel);
        SettingsPanel.setLayout(SettingsPanelLayout);
        SettingsPanelLayout.setHorizontalGroup(
            SettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SettingsPanelLayout.createSequentialGroup()
                .addGroup(SettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(TimerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, SettingsPanelLayout.createSequentialGroup()
                            .addComponent(buttonControl, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(17, 17, 17)
                            .addComponent(buttonNewGame, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(17, 17, 17)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(SettingsPanelLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(LevelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SettingsPanelLayout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(ScoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SettingsPanelLayout.setVerticalGroup(
            SettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SettingsPanelLayout.createSequentialGroup()
                .addGroup(SettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonControl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonNewGame, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(TimerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(LevelLabel)
                .addGap(1, 1, 1)
                .addComponent(ScoreLabel)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GameFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(SettingsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(GameFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(SettingsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    private void buttonControlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonControlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonControlActionPerformed

    private void buttonNewGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNewGameActionPerformed
        try {
            listKeyCode = getList("CurrentInput.bi");
        } catch (Exception ex) {
            System.out.println("Can't retrieve input settings from file.");
        } 
        if(im.get(KeyStroke.getKeyStroke(listKeyCode.get(8),0,false)) != null){
            gameThread.stopTimer();
            gameThread.stopRunning();
            game.reset();
            input.disableInput(listKeyCode);
            startGame();
            gameThread.addInputHandler(input);
            gameThread.addListKeyCode(listKeyCode);
            input.replaceGameThread(gameThread);
            game.addGameThread(gameThread);
            
        }
    }//GEN-LAST:event_buttonNewGameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]){
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run(){
                WindowFrame main;
                try {
                    main = new WindowFrame();
                    main.setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(WindowFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel GameFrame;
    private javax.swing.JLabel LevelLabel;
    private javax.swing.JLabel ReadyLabel;
    private javax.swing.JPanel ReadyPanel;
    private javax.swing.JLabel ScoreLabel;
    private javax.swing.JPanel SettingsPanel;
    private javax.swing.JLabel TimerLabel;
    private javax.swing.JButton buttonControl;
    private javax.swing.JButton buttonNewGame;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
